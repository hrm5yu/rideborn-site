---
import Layout from '../components/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Card from '../components/Card.astro';
import { cmsFetch } from '../lib/microcms';
import type { MuseumItem } from '../lib/types';

let museumItems: MuseumItem[] = [];
let errorMessage = '';
let postsData: any[] = [];

try {
  // まず/postsエンドポイントを試す
  postsData = await cmsFetch('/posts');
  console.log('Posts API response:', postsData);
  console.log('Successfully fetched posts:', postsData?.length || 0);
  
  // 次に/museumエンドポイントを試す
  museumItems = await cmsFetch('/museum');
  console.log('Museum API response:', museumItems);
  console.log('Successfully fetched museum items:', museumItems?.length || 0);
} catch (error) {
  console.error('microCMS fetch error:', error);
  errorMessage = error instanceof Error ? error.message : 'Unknown error';
  // エラーが発生した場合は空の配列を使用
  museumItems = [];
}
---
<Layout title="MUSEUM - Ride Born">
  <Header />
  <main class="main museum-page">
    <section class="gallery">
      <div class="gallery-header">
        <h2>MUSEUM</h2>
        <div class="gallery-controls">
          <button class="shuffle-btn" data-shuffle>Shuffle</button>
          <button class="reset-btn" data-sort-reset>Reset Order</button>
        </div>
      </div>
      <div class="gallery-grid" data-sortable-container>
        {museumItems.length > 0 ? (
          museumItems.map((item) => (
            <Card post={item} />
          ))
        ) : (
          <div class="no-data">
            <h3>データがありません</h3>
            <p>museumエンドポイントにデータが存在しないか、APIキーにアクセス権限がありません。</p>
            {errorMessage && (
              <div class="error-details">
                <p><strong>エラー詳細:</strong> {errorMessage}</p>
              </div>
            )}
            <div class="debug-info">
              <p><strong>デバッグ情報:</strong></p>
              <p>Posts データ数: {postsData?.length || 0}</p>
              <p>Museum データ数: {museumItems?.length || 0}</p>
              <p>Posts レスポンス構造: {JSON.stringify(postsData, null, 2)}</p>
              <p>Museum レスポンス構造: {JSON.stringify(museumItems, null, 2)}</p>
            </div>
          </div>
        )}
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<style>
  .no-data {
    text-align: center;
    padding: 4rem 2rem;
    color: var(--text-color);
    grid-column: 1 / -1;
  }
  
  .no-data h3 {
    font-family: "Anton", "Arial", sans-serif;
    font-size: 2rem;
    margin-bottom: 1rem;
    color: var(--primary-color);
  }
  
  .no-data p {
    font-family: "Noto Sans JP", "Arial", sans-serif;
    font-size: 1.1rem;
    opacity: 0.8;
  }
  
  .error-details, .debug-info {
    margin-top: 1rem;
    padding: 1rem;
    background: rgba(255, 0, 0, 0.1);
    border-radius: 8px;
    font-family: "Noto Sans JP", "Arial", sans-serif;
    font-size: 0.9rem;
  }
  
  .debug-info {
    background: rgba(0, 255, 0, 0.1);
  }
</style>

